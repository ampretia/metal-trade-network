
/** Reminder: that for any given operation the files is check in-order top to bottom.
 * The first rule where the rule matches, incluing the condition is enacted.
 * No other rules are checked.
 *
 * If the bottom of the file is reach, and no specific rule has been enacted
 * then the default action is DENY
 */


/** 
 * Traders need to be able to do operations on commodities - but here are some restrctions
 * that are enforced by the Wholesaler and TradersAssets rules.
 * The CommoditiesView rule is the 'backstop' that permits general access to the 
 */
// rule Wholesaler {
//   description: "Allow Trader to see the commodities that are owned by the Wholesaler"
//   participant: "ampretia.mtn.Trader"
//   operation: READ,UPDATE
//   resource(v): "ampretia.mtn.Commodity"
//   condition: (v.owner.getIdentifier() == 'WHOLESALER' )
//   action: ALLOW
// }

// rule TradersAssets {
//   description: "Deby traders permissions on commodities that they do not own"
//   participant(t): "ampretia.mtn.Trader"
//   operation: ALL
//   resource(v): "ampretia.mtn.Commodity"
//   condition: (v.owner.getIdentifier() != t.getIdentifier()  )
//   action: DENY
// }

// rule CommoditiesView {
//   description: "Make the commodities themselves generally visible"
//   participant: "ampretia.mtn.Trader"
//   operation: ALL
//   resource: "ampretia.mtn.Commodity"
//   action: ALLOW
// }

// /**
//  * Permit the Traders to submit trades
//  */
// rule MakeTrades_1 {
//   description: "Allow traders to submit trades"
//   participant: "ampretia.mtn.Trader"
//   operation: ALL
//   resource: "ampretia.mtn.Trade"
//   action: ALLOW
// }


// /**
//  * Participant access; the traders need to be able to view their own traders, but 
//  * other traders. Regulators need to have a wider view
//  */
// rule TraderSeeThemselves {
//   description: "Trader can see their own participant"
//   participant(t): "ampretia.mtn.Trader"
//   operation: ALL
//   resource(v): "ampretia.mtn.Trader"
//   condition: (v.getIdentifier() == t.getIdentifier())
//   action: ALLOW
// }

// rule Regulator {
//   description: "Regulator can see all the trading assets etc. "
//   participant: "ampretia.mtn.Regulator"
//   operation: ALL
//   resource: "ampretia.mtn.**"
//   action: ALLOW
// }

// rule TradersSeeOwnTransactions {
//   description: "Traders should be able to see the history of the own transactions"
//   participant(t): "ampretia.mtn.Trader"
//   operation: READ
//   resource(v): "org.hyperledger.composer.system.HistorianRecord"
//   condition: (v.participantInvoking.getIdentifier() == t.getIdentifier())
//   action: ALLOW
// }

// /**
//  * HistorianRecords should only be generally visiable to regulator. A trader though can 
//  * see their own trades in the Historian
//  */
// rule DenyHistorian {
//   description: "Traders can't see the record of what has happened in the business network"
//   participant: "ampretia.mtn.Trader"
//   operation: READ,UPDATE,DELETE
//   resource: "org.hyperledger.composer.system.HistorianRecord"
//   action: DENY
// }

/**
 * All participants in this network need to have general information to see the details of the deployed
 * business Network
 */
rule NetworkUpdate {
  description:  "System ACL to permit all access"
  participant: "ampretia.mtn.Trader"
  operation: READ
  resource: "org.hyperledger.composer.system.Network"
  action: ALLOW
}


rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "ampretia.**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

//
// TO DO Remove this one as it grants permissions to do too much 
//
rule SystemACL {
 description:  "System ACL to permit all access"
 participant: "org.hyperledger.composer.system.Participant"
 operation: ALL
 resource: "ampretia.**"
 action: ALLOW
} 

//
rule SystemACL_2 {
 description:  "System ACL to permit all access"
 participant: "org.hyperledger.composer.system.Participant"
 operation: ALL
 resource: "org.hyperledger.composer.system.**"
 action: ALLOW
} 
